---
interface Props {
    title: string;
    descriptionPage?: string;
    backgroundColor?: string;
    navbarProps?: string;
    logoClassLayout?: string;
    mainSecctionClass?: string;
}
const {
    title,
    descriptionPage = 'Birgit Matthias Malerei',
    backgroundColor = 'bg-[#c4bab5]',
    navbarProps,
    logoClassLayout,
    mainSecctionClass,
} = Astro.props;

import '@styles/global.css';

import Navbar from '@sections/Navbar.astro';
import GlobalStyles from '@styles/GlobalStyles.astro';
import ObserverScript from '@helpers/ObserverScript.astro';
---

<!doctype html>
<html lang='de'>
    <head>
        <title>{title}</title>
        <meta charset='UTF-8' />
        <meta name='description' content={descriptionPage} />
        <meta name='viewport' content='width=device-width' />
        <meta name='generator' content={Astro.generator} />
        <meta name='keywords' content='Birgit Matthias, Malerei, Kunst' />
        <link rel='canonical' href='https://birgitmatthias.de/' />
        <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
        <meta name='robots' content='index, follow' />
        <meta name='googlebot' content='index, follow' />
    </head>
    <body
        class:list={[
            'bg-[#c4bab5]/80  x-auto min-h-screen flex flex-col',
            backgroundColor,
        ]}
    >
        <!-- 'linkLogoClass' as class is used to target the Logo with JS -->
        <Navbar
            linkLogoClass=`linkLogoClass lg:mt-40 mt-0 md:bg-white bg-transparent ${logoClassLayout}`
            headerNavClass=`bg-white  pb-2 h-30 md:h-34 lg:h-16 ${navbarProps}`
        />
        <main class:list={['flex-grow', mainSecctionClass]}><slot /></main>
        <GlobalStyles />
        <ObserverScript />
    </body>
</html>

<style is:global>
    .grid {
        display: grid;
        /* --grid-border-radius: 8px; */
        grid-template-columns: repeat(2, 49%);
    }

    .grid--large {
        padding: 0.5vw;
        --grid-padding: 0.5vw;
    }

    .grid--large .grid__cell {
        aspect-ratio: 1/1;
    }

    .grid--mini {
        --grid-padding: 1px;

        width: 235px;
        max-height: 190px;
        margin-bottom: 3vh;
        display: none;
        position: absolute;
        overflow: auto;
        padding-right: 10px;
    }

    .grid--mini .grid__cell:not(.grid__cell--current):hover .grid__cell-img {
        opacity: 0.7;
    }

    .grid__cell--current .grid__cell-img {
        opacity: 0.3;
    }

    .grid__cell--padded {
        padding: calc(var(--grid-padding) * 2);
    }

    .grid__cell--padded {
        display: flex;
        align-items: flex-end;
    }

    .grid__cell-img {
        width: calc(100% - var(--grid-padding) * 2);
        height: calc(100% - var(--grid-padding) * 2);
        margin: var(--grid-padding);
        border-radius: var(--grid-border-radius);
        display: block;
        position: relative;
        overflow: hidden;
    }

    .grid__cell-img-inner {
        aspect-ratio: 1/1;
        object-fit: cover;
        /* border-radius: var(--grid-border-radius); */
        width: 100%;
        height: 100%;
    }

    @media screen and (max-width: 350px) {
        /* Your CSS styles for screens less than or equal to 400px here */
        .grid {
            display: flex;
            flex-direction: column;
            padding: 20px;
        }
    }

    @media screen and (min-width: 53em) {
        .grid {
            grid-template-columns: repeat(3, 32%);
        }
        .grid__cell--padded {
            padding: var(--grid-padding);
        }
        .grid__cell-c1-r1 {
            grid-column: 1;
            grid-row: 1;
        }
        .grid__cell-c3-r1 {
            grid-column: 3;
            grid-row: 1;
        }
        .grid__cell-c4-r1 {
            grid-column: 4;
            grid-row: 1;
        }
        .grid__cell-c1-r2 {
            grid-column: 1;
            grid-row: 2;
        }
        .grid__cell-c2-r2 {
            grid-column: 2;
            grid-row: 2;
        }
        .grid__cell-c3-r2 {
            grid-column: 3;
            grid-row: 2;
        }
        .grid__cell-c4-r2 {
            grid-column: 4;
            grid-row: 2;
        }
        .grid__cell-c2-r3 {
            grid-column: 2;
            grid-row: 3;
        }
        .grid__cell-c4-r3 {
            grid-column: 4;
            grid-row: 3;
        }
        .grid__cell-c1-r4 {
            grid-column: 1;
            grid-row: 4;
        }
        .grid__cell-c3-r4 {
            grid-column: 3;
            grid-row: 4;
        }
        .grid__cell-c3-r5 {
            grid-column: 3;
            grid-row: 5;
        }
        .grid--mini {
            display: grid;
            visibility: visible;
            position: relative;
        }
        .content--open .grid--mini {
            pointer-events: auto;
        }
    }

    .grid--mini .grid__cell-img-inner {
        aspect-ratio: 2/1.4;
    }

    .grid--large .grid__cell-img,
    .grid--large .grid__cell-img-inner {
        transition: scale 1.5s cubic-bezier(0, 0.55, 0.45, 1);
    }

    .grid--large .grid__cell-img:hover {
        scale: 0.9;
    }
</style>
